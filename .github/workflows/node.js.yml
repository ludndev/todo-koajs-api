# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_NAME: "todo-koajs-api"
  APP_HOST: "0.0.0.0"
  APP_PORT: "3000"
  DATABASE_NAME: "todo"
  DATABASE_USER: "postgres"
  DATABASE_PASS: "postgres_password"
  DATABASE_HOST: "0.0.0.0"
  DATABASE_PORT: "5432"
  DATABASE_SSL: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: "${{ env.DATABASE_NAME }}"
          POSTGRES_PORT: "${{ env.DATABASE_PORT }}"
          POSTGRES_USER: "${{ env.DATABASE_USER }}"
          POSTGRES_PASSWORD: "${{ env.DATABASE_NAME }}"
          INPUT_POSTGRESQL_VERSION: 14
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - name: Migrate and seed database
      run: npm run knex
    - name: Run test
      run: npm test
